// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springroo.salary.web;

import com.springroo.salary.domain.AdvancedPayments;
import com.springroo.salary.domain.Configuration;
import com.springroo.salary.domain.PayRolls;
import com.springroo.salary.domain.ProblemReports;
import com.springroo.salary.domain.StartSalarys;
import com.springroo.salary.domain.Users;
import com.springroo.salary.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<AdvancedPayments, String> ApplicationConversionServiceFactoryBean.getAdvancedPaymentsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springroo.salary.domain.AdvancedPayments, java.lang.String>() {
            public String convert(AdvancedPayments advancedPayments) {
                return new StringBuilder().append(advancedPayments.getDateWrite()).append(" ").append(advancedPayments.getReason()).append(" ").append(advancedPayments.getAmount()).append(" ").append(advancedPayments.getAmoutDate()).toString();
            }
        };
    }
    
    public Converter<Long, AdvancedPayments> ApplicationConversionServiceFactoryBean.getIdToAdvancedPaymentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springroo.salary.domain.AdvancedPayments>() {
            public com.springroo.salary.domain.AdvancedPayments convert(java.lang.Long id) {
                return AdvancedPayments.findAdvancedPayments(id);
            }
        };
    }
    
    public Converter<String, AdvancedPayments> ApplicationConversionServiceFactoryBean.getStringToAdvancedPaymentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springroo.salary.domain.AdvancedPayments>() {
            public com.springroo.salary.domain.AdvancedPayments convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AdvancedPayments.class);
            }
        };
    }
    
    public Converter<Configuration, String> ApplicationConversionServiceFactoryBean.getConfigurationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springroo.salary.domain.Configuration, java.lang.String>() {
            public String convert(Configuration configuration) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Long, Configuration> ApplicationConversionServiceFactoryBean.getIdToConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springroo.salary.domain.Configuration>() {
            public com.springroo.salary.domain.Configuration convert(java.lang.Long id) {
                return Configuration.findConfiguration(id);
            }
        };
    }
    
    public Converter<String, Configuration> ApplicationConversionServiceFactoryBean.getStringToConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springroo.salary.domain.Configuration>() {
            public com.springroo.salary.domain.Configuration convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Configuration.class);
            }
        };
    }
    
    public Converter<PayRolls, String> ApplicationConversionServiceFactoryBean.getPayRollsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springroo.salary.domain.PayRolls, java.lang.String>() {
            public String convert(PayRolls payRolls) {
                return new StringBuilder().append(payRolls.getPayTotal()).append(" ").append(payRolls.getIds()).append(" ").append(payRolls.getBonus()).append(" ").append(payRolls.getPTax()).toString();
            }
        };
    }
    
    public Converter<Long, PayRolls> ApplicationConversionServiceFactoryBean.getIdToPayRollsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springroo.salary.domain.PayRolls>() {
            public com.springroo.salary.domain.PayRolls convert(java.lang.Long id) {
                return PayRolls.findPayRolls(id);
            }
        };
    }
    
    public Converter<String, PayRolls> ApplicationConversionServiceFactoryBean.getStringToPayRollsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springroo.salary.domain.PayRolls>() {
            public com.springroo.salary.domain.PayRolls convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PayRolls.class);
            }
        };
    }
    
    public Converter<ProblemReports, String> ApplicationConversionServiceFactoryBean.getProblemReportsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springroo.salary.domain.ProblemReports, java.lang.String>() {
            public String convert(ProblemReports problemReports) {
                return new StringBuilder().append(problemReports.getTopic()).append(" ").append(problemReports.getMessages()).append(" ").append(problemReports.getWrite_date()).toString();
            }
        };
    }
    
    public Converter<Long, ProblemReports> ApplicationConversionServiceFactoryBean.getIdToProblemReportsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springroo.salary.domain.ProblemReports>() {
            public com.springroo.salary.domain.ProblemReports convert(java.lang.Long id) {
                return ProblemReports.findProblemReports(id);
            }
        };
    }
    
    public Converter<String, ProblemReports> ApplicationConversionServiceFactoryBean.getStringToProblemReportsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springroo.salary.domain.ProblemReports>() {
            public com.springroo.salary.domain.ProblemReports convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProblemReports.class);
            }
        };
    }
    
    public Converter<StartSalarys, String> ApplicationConversionServiceFactoryBean.getStartSalarysToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springroo.salary.domain.StartSalarys, java.lang.String>() {
            public String convert(StartSalarys startSalarys) {
                return new StringBuilder().append(startSalarys.getSalaryDefualt()).append(" ").append(startSalarys.getBonus()).append(" ").append(startSalarys.getTax()).append(" ").append(startSalarys.getWithdraw()).toString();
            }
        };
    }
    
    public Converter<Long, StartSalarys> ApplicationConversionServiceFactoryBean.getIdToStartSalarysConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springroo.salary.domain.StartSalarys>() {
            public com.springroo.salary.domain.StartSalarys convert(java.lang.Long id) {
                return StartSalarys.findStartSalarys(id);
            }
        };
    }
    
    public Converter<String, StartSalarys> ApplicationConversionServiceFactoryBean.getStringToStartSalarysConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springroo.salary.domain.StartSalarys>() {
            public com.springroo.salary.domain.StartSalarys convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), StartSalarys.class);
            }
        };
    }
    
    public Converter<Users, String> ApplicationConversionServiceFactoryBean.getUsersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.springroo.salary.domain.Users, java.lang.String>() {
            public String convert(Users users) {
                return new StringBuilder().append(users.getIds()).append(" ").append(users.getUserName()).append(" ").append(users.getPositions()).toString();
            }
        };
    }
    
    public Converter<Long, Users> ApplicationConversionServiceFactoryBean.getIdToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.springroo.salary.domain.Users>() {
            public com.springroo.salary.domain.Users convert(java.lang.Long id) {
                return Users.findUsers(id);
            }
        };
    }
    
    public Converter<String, Users> ApplicationConversionServiceFactoryBean.getStringToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.springroo.salary.domain.Users>() {
            public com.springroo.salary.domain.Users convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Users.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAdvancedPaymentsToStringConverter());
        registry.addConverter(getIdToAdvancedPaymentsConverter());
        registry.addConverter(getStringToAdvancedPaymentsConverter());
        registry.addConverter(getConfigurationToStringConverter());
        registry.addConverter(getIdToConfigurationConverter());
        registry.addConverter(getStringToConfigurationConverter());
        registry.addConverter(getPayRollsToStringConverter());
        registry.addConverter(getIdToPayRollsConverter());
        registry.addConverter(getStringToPayRollsConverter());
        registry.addConverter(getProblemReportsToStringConverter());
        registry.addConverter(getIdToProblemReportsConverter());
        registry.addConverter(getStringToProblemReportsConverter());
        registry.addConverter(getStartSalarysToStringConverter());
        registry.addConverter(getIdToStartSalarysConverter());
        registry.addConverter(getStringToStartSalarysConverter());
        registry.addConverter(getUsersToStringConverter());
        registry.addConverter(getIdToUsersConverter());
        registry.addConverter(getStringToUsersConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
